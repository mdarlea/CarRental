// <auto-generated />
using System;
using CarRental.Data.UnitOfWork;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarRental.Data.MySql.Migrations
{
    [DbContext(typeof(CarRentalUnitOfWork))]
    [Migration("20190313184447_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854");

            modelBuilder.Entity("CarRental.Domain.Aggregates.AvailableCarAgg.AvailableCar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CarId");

                    b.Property<int>("NumberOfCars");

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.ToTable("AvailableCars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 1,
                            NumberOfCars = 10,
                            Price = 85.99m
                        },
                        new
                        {
                            Id = 2,
                            CarId = 2,
                            NumberOfCars = 15,
                            Price = 87.99m
                        },
                        new
                        {
                            Id = 3,
                            CarId = 3,
                            NumberOfCars = 5,
                            Price = 94.01m
                        },
                        new
                        {
                            Id = 4,
                            CarId = 4,
                            NumberOfCars = 7,
                            Price = 112.00m
                        },
                        new
                        {
                            Id = 5,
                            CarId = 5,
                            NumberOfCars = 12,
                            Price = 118.00m
                        },
                        new
                        {
                            Id = 6,
                            CarId = 6,
                            NumberOfCars = 13,
                            Price = 135.99m
                        },
                        new
                        {
                            Id = 7,
                            CarId = 7,
                            NumberOfCars = 5,
                            Price = 276.01m
                        },
                        new
                        {
                            Id = 8,
                            CarId = 8,
                            NumberOfCars = 9,
                            Price = 308.00m
                        },
                        new
                        {
                            Id = 9,
                            CarId = 9,
                            NumberOfCars = 4,
                            Price = 352.00m
                        });
                });

            modelBuilder.Entity("CarRental.Domain.Aggregates.BookingAgg.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AvailableCarId");

                    b.Property<DateTime>("From");

                    b.Property<DateTime>("To");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("AvailableCarId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("CarRental.Domain.Aggregates.CarAgg.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<short>("HasAirConditioning");

                    b.Property<short>("HasDiesel");

                    b.Property<short>("HasPetrol");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(300);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<int>("NumberOfBags");

                    b.Property<int>("NumberOfDoors");

                    b.Property<int>("NumberOfSeats");

                    b.Property<string>("TransmissionType")
                        .IsRequired();

                    b.Property<int>("TypeId");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            HasAirConditioning = (short)1,
                            HasDiesel = (short)0,
                            HasPetrol = (short)1,
                            ImageUrl = "assets/images/VolkswagenUp.png",
                            Name = "Volkswagen Up!",
                            NumberOfBags = 1,
                            NumberOfDoors = 5,
                            NumberOfSeats = 4,
                            TransmissionType = "Manual",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            HasAirConditioning = (short)1,
                            HasDiesel = (short)1,
                            HasPetrol = (short)1,
                            ImageUrl = "assets/images/VolkswagenPolo.png",
                            Name = "Volkswagen Polo",
                            NumberOfBags = 2,
                            NumberOfDoors = 5,
                            NumberOfSeats = 5,
                            TransmissionType = "Manual",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            HasAirConditioning = (short)1,
                            HasDiesel = (short)0,
                            HasPetrol = (short)1,
                            ImageUrl = "assets/images/RenaultClioAutomatic.png",
                            Name = "Renault Clio Automatic",
                            NumberOfBags = 2,
                            NumberOfDoors = 5,
                            NumberOfSeats = 5,
                            TransmissionType = "Automatic",
                            TypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            HasAirConditioning = (short)1,
                            HasDiesel = (short)1,
                            HasPetrol = (short)1,
                            ImageUrl = "assets/images/VolkswagenGolf.png",
                            Name = "Volkswagen Golf",
                            NumberOfBags = 2,
                            NumberOfDoors = 5,
                            NumberOfSeats = 5,
                            TransmissionType = "Manual",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 5,
                            HasAirConditioning = (short)1,
                            HasDiesel = (short)1,
                            HasPetrol = (short)1,
                            ImageUrl = "assets/images/VolkswagenGolfAutomatic.png",
                            Name = "Volkswagen Golf Automatic",
                            NumberOfBags = 2,
                            NumberOfDoors = 5,
                            NumberOfSeats = 5,
                            TransmissionType = "Automatic",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 6,
                            HasAirConditioning = (short)1,
                            HasDiesel = (short)1,
                            HasPetrol = (short)1,
                            ImageUrl = "assets/images/DaciaDuster.png",
                            Name = "Dacia Duster 4x4",
                            NumberOfBags = 3,
                            NumberOfDoors = 5,
                            NumberOfSeats = 5,
                            TransmissionType = "Manual",
                            TypeId = 2
                        },
                        new
                        {
                            Id = 7,
                            HasAirConditioning = (short)1,
                            HasDiesel = (short)1,
                            HasPetrol = (short)0,
                            ImageUrl = "assets/images/MercedesBenzC.png",
                            Name = "Mercedes-Benz C-Class Automatic",
                            NumberOfBags = 2,
                            NumberOfDoors = 4,
                            NumberOfSeats = 5,
                            TransmissionType = "Automatic",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 8,
                            HasAirConditioning = (short)1,
                            HasDiesel = (short)1,
                            HasPetrol = (short)0,
                            ImageUrl = "assets/images/MercedesBenzGLC.png",
                            Name = "Mercedes Benz GLC 220 Automatic Diesel",
                            NumberOfBags = 3,
                            NumberOfDoors = 4,
                            NumberOfSeats = 5,
                            TransmissionType = "Automatic",
                            TypeId = 3
                        },
                        new
                        {
                            Id = 9,
                            HasAirConditioning = (short)1,
                            HasDiesel = (short)1,
                            HasPetrol = (short)0,
                            ImageUrl = "assets/images/MercedesBenzGLE.png",
                            Name = "Mercedes-Benz GLE 250 Automatic Diesel",
                            NumberOfBags = 3,
                            NumberOfDoors = 5,
                            NumberOfSeats = 5,
                            TransmissionType = "Automatic",
                            TypeId = 3
                        });
                });

            modelBuilder.Entity("CarRental.Domain.Aggregates.CarTypeAgg.CarType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.ToTable("CarTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Small"
                        },
                        new
                        {
                            Id = 2,
                            Type = "Mid-Size"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Large"
                        });
                });

            modelBuilder.Entity("CarRental.Domain.Aggregates.UserAgg.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("aspnetusers");
                });

            modelBuilder.Entity("CarRental.Domain.Aggregates.AvailableCarAgg.AvailableCar", b =>
                {
                    b.HasOne("CarRental.Domain.Aggregates.CarAgg.Car", "Car")
                        .WithMany()
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CarRental.Domain.Aggregates.BookingAgg.Booking", b =>
                {
                    b.HasOne("CarRental.Domain.Aggregates.AvailableCarAgg.AvailableCar", "AvailableCar")
                        .WithMany("Bookings")
                        .HasForeignKey("AvailableCarId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CarRental.Domain.Aggregates.UserAgg.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CarRental.Domain.Aggregates.CarAgg.Car", b =>
                {
                    b.HasOne("CarRental.Domain.Aggregates.CarTypeAgg.CarType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CarRental.Domain.Aggregates.UserAgg.User", b =>
                {
                    b.OwnsOne("Swaksoft.Domain.Seedwork.Aggregates.ValueObjects.Name", "Name", b1 =>
                        {
                            b1.Property<string>("UserId");

                            b1.Property<string>("FirstName")
                                .IsRequired()
                                .HasMaxLength(150);

                            b1.Property<string>("LastName")
                                .IsRequired()
                                .HasMaxLength(150);

                            b1.Property<string>("MiddleName")
                                .HasMaxLength(150);

                            b1.HasKey("UserId");

                            b1.ToTable("aspnetusers");

                            b1.HasOne("CarRental.Domain.Aggregates.UserAgg.User")
                                .WithOne("Name")
                                .HasForeignKey("Swaksoft.Domain.Seedwork.Aggregates.ValueObjects.Name", "UserId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
